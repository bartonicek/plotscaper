list(
x,
toBe = function(y) {
x == y
},
)
}
expect(10)$toBe(10)
expect <- function(x) {
list(
x,
toBe = function(y) {
x == y
}
)
}
expect(10)$toBe(10)
expect <- function(x) {
list(
x,
toBe = function(y) x == y
)
}
expect(10)$toBe(10)
?all.equal()
all.equal(list(a = 1, b = 2), list(a = 1, b = 2))
expect <- function(x) {
list(
x,
toBe = function(y) x == y,
toEqual = function(y) all.equal(x, y)
)
}
expect(10)$toBe(10)
expect(10)$toEqual(10)
{ 1 + 2 }
test <- function(label, expr) {
result <- expr
print(expr)
}
test(a, 1 + 1)
test <- function(label, expr) {
result <- expr
if (result == TRUE) return()
cat("Failed foo")
}
test <- function(label, expr) {
result <- expr
if (result == TRUE) return()
print(paste("Failed test", label))
}
test("foo", 1 + 1 == 3)
test <- function(label, expr) {
result <- expr
if (result == TRUE) return()
cat(paste("Failed test", label))
}
test("foo", 1 + 1 == 3)
test("foo", {
1 + 2 == 2
})
test("foo", {
1 + 2 == 2
})
test <- function(label, expr) {
result <- expr
print(result)
if (result == TRUE) return()
cat(paste("Failed test", label))
}
test("foo", {
1 + 2 == 2
})
test <- function(label, expr) {
result <- expr
if (result == TRUE) return()
cat(paste("Failed test", label))
}
test("foo", {
1 + 1 == 2
})
test <- function(label, expr) {
result <- expr
if (result == TRUE) {
cat(paste("Passed", label))
return()
}
cat(paste("Failed", label))
}
test("foo", {
1 + 1 == 2
})
test <- function(label, expr) {
result <- expr
if (result == TRUE) {
cat(paste("Passed", label))
return(invisible())
}
cat(paste("Failed", label))
}
test("foo", {
1 + 1 == 2
})
test <- function(label, expr) {
result <- expr
if (result == TRUE) {
cat(paste("Passed", label))
return(invisible())
}
cat(paste("Failed", label))
}
test("foo", {
1 + 1 == 2
})
cat(paste("Passed", "'", label, "'"))
return(invisible())
test <- function(label, expr) {
result <- expr
if (result == TRUE) {
cat(paste("Passed", "'", label, "'"))
return(invisible())
}
cat(paste("Failed", label))
}
test("foo", {
1 + 1 == 2
})
test <- function(label, expr) {
result <- expr
if (result == TRUE) {
cat(paste0("Passed ", "'", label, "'"))
return(invisible())
}
cat(paste("Failed", label))
}
test("foo", {
1 + 1 == 2
})
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
devtools::install()
library(plotscaper)
.rs.restartR()
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
schema |> get_plot_ids()
schema |> get_plot_ids()
devtools::load_all()
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
schema |> get_plot_ids()
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
schema |> get_plot_ids()
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
list.files()
source("get_plot_ids.test.R")
source("get_plot_ids.test.R")
list.files()
list.files("./inst/tests")
?list.files
list.files("./inst/tests", full.names = TRUE)
files <- list.files("./inst/tests", full.names = TRUE)
grepl(".test", files)
grepl("\\.test", files)
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
lapply(file_paths, source)
.rs.restartR()
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
?do.call
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
scene <- schema |> render()
scene
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(scene |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
scene
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal({
scene |> pop_plot()
scene |> get_plot_ids()},
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
scene <- schema |> render()
scene
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
scene <- schema |> render()
scene
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
scene |> pop_plot()
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
scene |> remove_plot("scatter2")
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "bar1"))
)
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
lapply(file_paths, source)
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
file_paths <- list.files("./inst/tests", full.names = TRUE)
file_paths <- file_paths[grepl("\\.test", file_paths)]
lapply(file_paths, source)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_barplot(c("am"))
stopifnot(
all.equal(schema |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
stopifnot(
all.equal(schema |> pop_plot() |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1"))
)
stopifnot(
all.equal(schema |> remove_plot("scatter2") |> get_plot_ids(),
c("scatter1", "scatter2", "bar1", "bar2"))
)
scene <- schema |> render()
scene
stopifnot(
all.equal(scene |> get_plot_ids(),
c("scatter1", "scatter2", "scatter3", "bar1", "bar2"))
)
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl"))
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg"))
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
scene
scene |> set_scale("plot1", "x", min = 0, max = 10)
scene |> set_scale("plot1", "y", direction = -1)
x <- scene |> get_scale(plot1, "x")
x <- scene |> get_scale("plot1", "x")
x
x$domain$props$min
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$domain$props$zero == 0 &&
x$domain$props$one == 1
)
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$props$zero == 0 &&
x$props$one == 1
)
x$props
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
scene |> set_scale("plot1", "x", min = 0, max = 10)
x <- scene |> get_scale("plot1", "x")
x
x$props
devtools::load_all()
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
httpuv::stopAllServers()
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
scene |> set_scale("plot1", "x", min = 0, max = 10)
scene |> set_scale("plot1", "y", direction = -1)
x <- scene |> get_scale("plot1", "x")
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$props$zero == 0 &&
x$props$one == 1
)
devtools::install()
y <- scene |> get_scale("plot1", "y")
y <- scene |> get_scale("plot1", "y")
.rs.restartR()
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
scene |> set_scale("plot1", "x", min = 0, max = 10)
scene |> set_scale("plot1", "y", direction = -1)
x <- scene |> get_scale("plot1", "x")
y <- scene |> get_scale("plot1", "y")
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$props$zero == 0 &&
x$props$one == 1
)
y$props
stopifnot(
y$domain$props
)
stopifnot(
y$props$direction != -1
)
y$props$direction
stopifnot(
y$props$direction == -1
)
size <- scene |> get_scale("plot1", "size")
size
scene |> set_scale("plot1", "size", mult = 3)
stopifnot(
size$props$mult == 3
)
size <- scene |> get_scale("plot1", "size")
stopifnot(
size$props$mult == 3
)
scene |> set_scale("plot1", "size", mult = 3, scale = 1/20)
scene |> set_scale("plot1", "size", mult = 3, scale = 1/20)
x <- scene |> get_scale("plot1", "x")
y <- scene |> get_scale("plot1", "y")
size <- scene |> get_scale("plot1", "size")
size
scene |> set_scale("plot1", "size", mult = 3)
x <- scene |> get_scale("plot1", "x")
y <- scene |> get_scale("plot1", "y")
size <- scene |> get_scale("plot1", "size")
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$props$zero == 0 &&
x$props$one == 1
)
stopifnot(
y$props$direction == -1
)
stopifnot(
size$props$mult == 3
)
library(plotscaper)
scene <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
render()
scene |> set_scale("plot1", "x", min = 0, max = 10)
scene |> set_scale("plot1", "y", direction = -1)
scene |> set_scale("plot1", "size", mult = 3)
x <- scene |> get_scale("plot1", "x")
y <- scene |> get_scale("plot1", "y")
size <- scene |> get_scale("plot1", "size")
stopifnot(
x$domain$props$min == 0 &&
x$domain$props$max == 10 &&
x$props$zero == 0 &&
x$props$one == 1
)
stopifnot(
y$props$direction == -1
)
stopifnot(
size$props$mult == 3
)
getwd()
source("./inst/tests/set_scale.test.R")
source("./inst/tests/set_scale.test.R")
source("./inst/tests/set_scale.test.R")
source("./inst/tests/set_scale.test.R")
scene |> get_scale("plot1", "size")
scene |> get_scale("plot1", "size")
scene |> get_scale("plot1", "size")
devtools::load_all(".")
devtools::check()
