scene |> select_cases(1:10)
scene <- schema |> render()
scene |> select_cases(1:10)
scene |> select_cases(1:10) |> assign_cases(10:20)
scene |> assign_cases(10:20) |> select_cases(1:10)
scene |> assign_cases(10:20) |> select_cases(1:10)
devtools::load_all()
scene |>
add_scatterplot(c("rating", "votes")) |>
add_barplot(c("director"))
scene <- create_schema(url) |> render()
httpuv::stopAllServers()
scene <- create_schema(url) |> render()
scene
create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg"))
scene <- schema |> render()
scene |> assign_cases(10:20) |> select_cases(1:10)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_histogram(c("wt")) |>
add_histogram("mpg")
schema |> render()
devtools::load_all()
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_histogram(c("wt")) |>
add_histogram("mpg")
schema |> render()
httpuv::stopAllServers()
schema |> render()
devtools::install()
library(plotscaper)
schema <- create_schema(mtcars) |>
add_scatterplot(c("wt", "mpg")) |>
add_barplot(c("cyl")) |>
add_histogram(c("wt")) |>
add_histogram("mpg")
schema |> render()
pkgdown::build_site()
foo <- function(x = c(1, 2, 3)) {
}
foo
args(foo)
?args()
args(ls)
str(foo)
args(foo)$x
args(foo)
body(args(foo))
formals(foo)
formals(foo)$x
y <- formals(foo)$x
y
y + 1
eval(y)
euclid_norm <- function(x, y) sqrt(sum(x^2 + y^2))
euclid_norm(c(1, 2), 3)
euclid_norm(c(1, 2, 3))
euclid_norm <- function(x, y = c()) sqrt(sum(x^2 + y^2))
euclid_norm(c(1, 2), 3)
euclid_norm(c(1, 2, 3))
euclid_norm <- function(x, y = 0) sqrt(sum(x^2 + y^2))
euclid_norm(c(1, 2), 3)
euclid_norm(c(1, 2, 3))
(1:3)^2
sum((1:3)^2)
sqrt(sum((1:3)^2))
euclid_norm <- function(x, y = 0) sqrt(sum(x^2) + sum(y^2))
euclid_norm(c(1, 2), 3)
euclid_norm(c(1, 2, 3))
library(plotscaper)
library(caret)
data("Sacramento")
dplyr::glimpse(Sacramento)
create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
render()
httpuv::stopAllServers()
library(plotscaper)
library(caret)
data("Sacramento")
dplyr::glimpse(Sacramento)
create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
render()
devtools::install()
library(plotscaper)
library(caret)
create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
render()
scene <- schema |> render()
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft"))
scene <- schema |> render()
scene
library(plotscaper)
library(caret)
data("Sacramento")
dplyr::glimpse(Sacramento)
.rs.restartR()
library(plotscaper)
library(caret)
data("Sacramento")
dplyr::glimpse(Sacramento)
create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
render()
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft"))
scena <- schema |>  render()
scene <- schema |>  render()
scene
scene |> add_scatterplot(c("sqft", "price"))
scene |> add_scatterplot(c("sqft", "price"))
scene |> pop_plot()
scene |> pop_plot()
scene |> select_cases(1:100)
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
select_cases(1:100)
scene <- schema |>  render()
scene
scene |> select_cases(100:200)
scene
scene
scene |> set_scale("scatter1", min = -122)
scene |> set_scale("scatter1", min = -122)
scene |> set_scale("scatter1", "x", min = -122)
scene |> zoom("scatter1", c(0.25, 0.25, 0.75, 0.75))
diamonds <- ggplot2::diamonds
dplyr::glimpse(diamonds)
create_schema(diamonds) |>
add_scatterplot(c("carat", "price")) |>
add_barplot(c("color")) |>
render()
library(plotscaper)
library(caret)
data("Sacramento")
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
select_cases(1:100)
scene <- schema |>  render()
scene
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
add_pcoords(c("latitude", "longitude", "sqft", "price"))
scene <- schema |>  render()
scene
devtools::load_all()
schema <- create_schema(Sacramento) |>
add_scatterplot(c("longitude", "latitude"), list(ratio = 1)) |>
add_barplot(c("city")) |>
add_fluctplot(c("beds", "baths")) |>
add_histogram(c("sqft")) |>
add_pcoords(c("latitude", "longitude", "sqft", "price"))
scene <- schema |>  render()
scene
usethis::use_version("patch")
schema
schema$queue
schema$queue[c("id")]
schema$queue$data[c("id")]
schema$queue$data["id"]
schema$queue$data
schema$queue
schema$queue[[1]]
schema$queue[[1]]$data
schema$queue[[1]]$data["id"]
schema$queue[[1]]
render_message <- function(msg) {
paste(msg$type, "{", msg[msg != "type"], "}")
}
render_message(schema$queue[[1]])
render_message <- function(msg) {
paste(msg$type, "{", paste(msg[msg != "type"]), "}")
}
render_message(schema$queue[[1]])
render_message <- function(msg) {
paste(msg$type, "{", paste(msg[msg != "type"], collapse = ","), "}")
}
render_message(schema$queue[[1]])
msg <- schema$queue[[1]]
render_message <- function(msg) {
paste(msg$type, "{", paste(msg$data, collapse = ","), "}")
}
render_message(schema$queue[[1]])
msg <- schema$queue[[1]]
msg$data
d <- msg$data
paste(names(d), d)
paste(names(d), ":", d)
cat(paste(names(d), ":", d))
cat(paste(names(d), ":", d, collapse = ", "))
cat(paste0(names(d), ":", d, collapse = ", "))
cat(paste0(names(d), ": ", d, collapse = ", "))
cat(paste0(names(d), ": ", d, collapse = ", "))
render_message <- function(msg) {
type <- msg$type
data <- msg$data
data_string <- paste0(names(data[data != "id"]), ": ", d, collapse = ", ")
paste(type, "{", data_string, "}")
}
render_message(schema$queue[[1]])
d <- msg$data
d
d[d != "id"]
d[names(d) != "id"]
render_message <- function(msg) {
type <- msg$type
data <- msg$data[names(msg$data) != "id"]
data_string <- paste0(names(data), ": ", data, collapse = ", ")
paste(type, "{", data_string, "}")
}
render_message(schema$queue[[1]])
format_message_to_render <- function(msg) {
type <- msg$type
data <- msg$data[names(msg$data) != "id"]
data_string <- paste0(names(data), ": ", data, collapse = ", ")
paste(type, "{", data_string, "}")
}
format_message_to_render(schema$queue)
lapply(schema$queue, format_message_to_render)
#' @export
print.plotscaper_schema <- function(x, ...) {
formatted_messages <- lapply(x$queue, print_format_message)
formatted <- paste(formatted_messages, collapse = "\n")
cat(paste0("plotscaper schema:\n", formatted))
}
schema
print_format_message <- function(msg) {
type <- msg$type
data <- msg$data[names(msg$data) != "id"]
data_string <- paste0(names(data), ": ", data, collapse = ", ")
paste(type, "{", data_string, "}")
}
schema
#| fig-width: 7
#| fig-height: 5
library(plotscaper)
names(airquality) <- c("ozone", "solar radiation", "wind",
"temperature", "month", "day")
devtools::install()
#| fig-width: 7
#| fig-height: 5
library(plotscaper)
.rs.restartR()
#| fig-width: 7
#| fig-height: 5
library(plotscaper)
names(airquality) <- c("ozone", "solar radiation", "wind",
"temperature", "month", "day")
create_schema(airquality) |>
add_scatterplot(c("solar radiation", "ozone")) |>
add_barplot(c("day", "ozone"), list(reducer = "max")) |>
add_histogram(c("wind")) |>
add_pcoords(names(airquality)[1:4])
get_plot_ids <- function(x) UseMethod("get_plot_ids")
get_plot_ids.schema <- function(x) {
}
get_plot_ids.schema <- function(x) {
print(x$queue)
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
print(x$queue)
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
print(msg)
}
plots
}
get_plot_ids(schema)
x <- list(a = 1, b = 2, c = 3)
x <- x[-3]
x
startsWith("plot1", "plot")
gsub("([0-9]+)", "\\1", "plot1")
gsub("([0-9]+).", "\\1", "plot1")
gsub(".([0-9]+).", "\\1", "plot1")
gsub(".*+([0-9]+).", "\\1", "plot1")
gsub(".([0-9]+).", "\\1", "plot1")
gsub("([0-9]+)", "\\1", "plot1")
gsub("[[:digit:]]+", "\\1", "plot1")
gsub("([[:digit:]]+)", "\\1", "plot1")
gsub("[[:digit:]]+", "\\1", "plot1")
gsub("\\D", "", "plot1")
as.numeric(gsub("\\D", "", "plot1"))
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plots <- c(plots, msg$data$type)
}
plots
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[plot_type])) {
counts[plot_type] <- 1
}
plots <- c(plots, paste0(plot_type, counts[plot_type]))
counts[plot_type] <- counts[plot_type] + 1
}
plots
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[plot_type])) {
counts[plot_type] <- 1
}
print(counts)
plots <- c(plots, paste0(plot_type, counts[plot_type]))
counts[plot_type] <- counts[plot_type] + 1
}
plots
}
get_plot_ids(schema)
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[plot_type])) {
counts[plot_type] <<- 1
}
print(counts)
plots <- c(plots, paste0(plot_type, counts[plot_type]))
counts[plot_type] <- counts[plot_type] + 1
}
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[plot_type])) {
counts[plot_type] <<- 1
}
print(counts)
plots <- c(plots, paste0(plot_type, counts[plot_type]))
counts[plot_type] <- counts[plot_type] + 1
}
plots
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[plot_type])) {
counts[plot_type] <<- 1
}
print(counts[plot_type])
plots <- c(plots, paste0(plot_type, counts[plot_type]))
counts[plot_type] <- counts[plot_type] + 1
}
plots
}
get_plot_ids(schema)
}
get_plot_ids(schema)
}
get_plot_ids(schema)
plots
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
get_plot_ids.plotscaper_schema <- function(x) {
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[[plot_type]])) {
counts[[plot_type]] <<- 1
}
print(counts)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
plots
}
get_plot_ids(schema)
get_plot_ids(schema)
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[[plot_type]])) {
counts[[plot_type]] <<- 1
}
print(msg)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
plots
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[[plot_type]])) {
counts[[plot_type]] <<- 1
}
print(msg)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
plots
}
get_plot_ids(schema)
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
print(messages)
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
if (is.null(counts[[plot_type]])) {
counts[[plot_type]] <<- 1
}
print(msg)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
plots
}
get_plot_ids(schema)
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
# if (is.null(counts[[plot_type]])) {
#   counts[[plot_type]] <<- 1
# }
print(msg)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
get_plot_ids.plotscaper_schema <- function(x) {
messages <- x$queue
plots <- list()
counts <- list()
print(messages)
for (msg in messages) {
if (msg$type != "add-plot") next
plot_type <- msg$data$type
# if (is.null(counts[[plot_type]])) {
#   counts[[plot_type]] <<- 1
# }
print(msg)
# plots <- c(plots, paste0(plot_type, counts[[plot_type]]))
# counts[[plot_type]] <- counts[[plot_type]] + 1
}
plots
}
get_plot_ids(schema)
.rs.restartR()
